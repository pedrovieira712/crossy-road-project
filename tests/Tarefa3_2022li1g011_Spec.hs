module Tarefa3_2022li1g011_Spec where

import LI12223
import Tarefa3_2022li1g011
import Test.HUnit

test1 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Carro]),(Relva,[Nenhum,Arvore,Nenhum])])) (Parado)))
test2 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,2))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Carro]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Cima)))
test3 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Nenhum,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,0))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Baixo)))
test4 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (0,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Esquerda)))
test5 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (2,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Nenhum,Nenhum,Carro]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Nenhum,Nenhum,Carro]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Direita)))
test6 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Nenhum,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Cima)))
test7 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Nenhum,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Baixo)))
test8 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Nenhum,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (2,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Esquerda)))
test9 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 6 [(Relva,[Nenhum,Arvore,Nenhum,Arvore,Arvore,Nenhum]),(Estrada 1,[Nenhum,Carro,Nenhum,Nenhum,Carro,Carro]),(Relva, [Nenhum,Arvore,Nenhum,Arvore,Nenhum,Arvore])]))(animaJogo (Jogo(Jogador (2,1))(Mapa 6 [(Relva,[Nenhum,Arvore,Nenhum,Arvore,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Nenhum,Carro,Carro,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum,Arvore,Nenhum,Arvore])])) (Move Esquerda)))
test10 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (3,1))(Mapa 6 [(Relva,[Nenhum,Arvore,Nenhum,Arvore,Arvore,Nenhum]),(Estrada 1,[Carro,Carro,Nenhum,Carro,Nenhum,Nenhum]),(Relva, [Nenhum,Arvore,Nenhum,Arvore,Nenhum,Arvore])]))(animaJogo (Jogo(Jogador (3,1))(Mapa 6 [(Relva,[Nenhum,Arvore,Nenhum,Arvore,Arvore,Nenhum]),(Estrada 1,[Carro,Nenhum,Carro,Nenhum,Nenhum,Carro]),(Relva,[Nenhum,Arvore,Nenhum,Arvore,Nenhum,Arvore])])) (Move Cima)))
test11 = TestCase (assertEqual "Atropelamento" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada (-1),[Nenhum,Carro,Carro]),(Relva,[Nenhum,Nenhum,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Estrada (-1),[Carro,Nenhum,Carro]),(Relva,[Nenhum,Arvore,Nenhum])])) (Parado)))
test12 = TestCase (assertEqual "Árvore Frente" (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Relva,[Nenhum,Nenhum,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Relva,[Nenhum,Nenhum,Nenhum])])) (Move Cima)))
test13 = TestCase (assertEqual "Árvore Direita" (Jogo(Jogador (0,0))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Relva,[Nenhum,Nenhum,Nenhum])]))(animaJogo (Jogo(Jogador (0,0))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Relva,[Nenhum,Nenhum,Nenhum])])) (Move Direita)))
test14 = TestCase (assertEqual "Árvore Esquerda" (Jogo(Jogador (2,0))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Relva,[Nenhum,Nenhum,Nenhum])]))(animaJogo (Jogo(Jogador (2,0))(Mapa 3 [(Relva,[Nenhum,Arvore,Nenhum]),(Relva,[Nenhum,Nenhum,Nenhum])])) (Move Esquerda)))
test15 = TestCase (assertEqual "Arvore Atrás" (Jogo(Jogador (1,0))(Mapa 3 [(Relva,[Nenhum,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,0))(Mapa 3 [(Relva,[Nenhum,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Move Baixo)))
test16 = TestCase (assertEqual "Parado no Tronco Direita" (Jogo(Jogador (2,0))(Mapa 3 [(Rio 1,[Nenhum,Nenhum,Tronco]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,0))(Mapa 3 [(Rio 1 ,[Nenhum,Tronco,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Parado)))
test17 = TestCase (assertEqual "Parado no Tronco Esquerda" (Jogo(Jogador (0,0))(Mapa 3 [(Rio (-1),[Tronco,Nenhum,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])]))(animaJogo (Jogo(Jogador (1,0))(Mapa 3 [(Rio (-1) ,[Nenhum,Tronco,Nenhum]),(Relva,[Nenhum,Arvore,Nenhum])])) (Parado)))
test18 = TestCase (assertEqual "Escapar de um Carro" (Jogo(Jogador (1,0))(Mapa 3 [(Relva,[Nenhum,Nenhum,Arvore]),(Estrada 1 ,[Nenhum,Carro,Nenhum])]))(animaJogo (Jogo(Jogador (1,1))(Mapa 3 [(Relva ,[Nenhum,Nenhum,Arvore]),(Estrada 1,[Carro,Nenhum,Nenhum])])) (Move Cima)))
test19 = TestCase (assertEqual "Tentar sair do Mapa Direita" (Jogo(Jogador (2,1))(Mapa 3 [(Rio 2 ,[Nenhum,Tronco,Nenhum]),(Relva,[Arvore,Nenhum,Nenhum])]))(animaJogo (Jogo(Jogador (2,1))(Mapa 3 [(Rio 2 ,[Nenhum,Nenhum,Tronco]),(Relva,[Arvore,Nenhum,Nenhum])])) (Move Direita)))
test20 = TestCase (assertEqual "Tentar sair do Mapa Direita" (Jogo(Jogador (0,1))(Mapa 3 [(Rio 2 ,[Nenhum,Tronco,Nenhum]),(Relva,[Nenhum,Nenhum,Arvore])]))(animaJogo (Jogo(Jogador (0,1))(Mapa 3 [(Rio 2 ,[Nenhum,Nenhum,Tronco]),(Relva,[Nenhum,Nenhum,Arvore])])) (Move Esquerda)))


 testsT3 = TestList [test1,test2,test3,test4,test5,test6,test7,test8,test9,test10,test11,test12,test13,test14,test15,test16,test17,test18,test19,test20]